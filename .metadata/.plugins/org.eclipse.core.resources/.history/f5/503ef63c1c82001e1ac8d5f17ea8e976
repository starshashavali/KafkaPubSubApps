package com.tcs.config;

import java.util.HashMap;
import java.util.Map;

import org.apache.kafka.clients.consumer.ConsumerConfig;
import org.apache.kafka.common.serialization.StringDeserializer;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.kafka.config.ConcurrentKafkaListenerContainerFactory;
import org.springframework.kafka.core.ConsumerFactory;
import org.springframework.kafka.core.DefaultKafkaConsumerFactory;
import org.springframework.kafka.support.serializer.JsonDeserializer;

import com.tcs.constants.AppConstants;
import com.tcs.dto.Order;

@Configuration
public class KafkaConsumerConfig {
	
	@Bean
	public ConsumerFactory<String, Order> consumerFactory(){
		 Map<String, Object>configProp=new HashMap<>();
		 configProp.put(ConsumerConfig.BOOTSTRAP_SERVERS_CONFIG, AppConstants.HOST_NAME);
		 configProp.put(ConsumerConfig.KEY_DESERIALIZER_CLASS_CONFIG, StringDeserializer.class);
		 configProp.put(ConsumerConfig.VALUE_DESERIALIZER_CLASS_CONFIG, JsonDeserializer.class);
		 return new DefaultKafkaConsumerFactory<>(configProp);
	}


	public ConcurrentKafkaListenerContainerFactory<String, Order> kafkaListenerFactory(){
		ConcurrentKafkaListenerContainerFactory<String, Order> factory=new ConcurrentKafkaListenerContainerFactory<>();
		 factory.setConsumerFactory(consumerFactory());
		 return factory;
	}

}
